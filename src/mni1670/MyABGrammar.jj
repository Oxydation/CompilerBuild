/**
 * JavaCC template file created by SF JavaCC plugin 1.5.28+ wizard for JavaCC 1.5.0+
 */
options
{
  LOOKAHEAD= 1; // (default 1)


  static = false;
}

PARSER_BEGIN(MyABGrammar)
package mni1670;
import java.io.FileInputStream;

public class MyABGrammar
{
  public static void main(String args []) throws ParseException
  {
    try
    {      
      MyABGrammar parser = new MyABGrammar(new FileInputStream("text.txt"));

      while (true)
      {
        System.out.println("Reading ...");
        try
        {
          parser.s();
        }
        catch (Exception e)
        {
          System.out.println("Could not parse input.");
          System.out.println(e.getMessage());
          break;
        }
        catch (Error e)
        {
          System.out.println("Oops.");
          System.out.println(e.getMessage());
          break;
        }
      }
    }
    catch (Exception ex)
    {      
      System.out.println("Something went wrong: " + ex.getMessage());
    }	
  }
}

PARSER_END(MyABGrammar)

SKIP :
{
  " "
| "\r"
| "\t"
| "\n"
| < "//" (~[ "\n", "\r" ])*
    (
      "\n"
    | "\r"
    | "\r\n"
    ) >
| < "/*" (~[ "*" ])* "*"
    (
      ~[ "/" ] (~[ "*" ])* "*"
    )*
    "/" >
}

TOKEN : /* OPERATORS */
{
  < A : "*" >
| < B : "1" >
}

// VT = { *, 1 }
// VN = { S,A, B }
// S - > a | aB
// B - > b | bB
void s() :
{}
{      < A >  [ b() ]  < EOF >
}

void b() :
{}
{
  < B > (< B >)*
}
